// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: chat.sql

package db

import (
	"context"
)

const getChatById = `-- name: GetChatById :one
SELECT id, chat_id, title, type, is_forum, is_bot_member, hash, last_update FROM public.chat WHERE chat_id = $1
`

func (q *Queries) GetChatById(ctx context.Context, chatID int64) (Chat, error) {
	row := q.db.QueryRow(ctx, getChatById, chatID)
	var i Chat
	err := row.Scan(
		&i.ID,
		&i.ChatID,
		&i.Title,
		&i.Type,
		&i.IsForum,
		&i.IsBotMember,
		&i.Hash,
		&i.LastUpdate,
	)
	return i, err
}

const migrateChatId = `-- name: MigrateChatId :one
UPDATE public.chat
SET chat_id = $1, last_update = now()
WHERE chat_id = $2
RETURNING id, chat_id, title, type, is_forum, is_bot_member, hash, last_update
`

type MigrateChatIdParams struct {
	NewChatID int64
	OldChatID int64
}

func (q *Queries) MigrateChatId(ctx context.Context, arg MigrateChatIdParams) (Chat, error) {
	row := q.db.QueryRow(ctx, migrateChatId, arg.NewChatID, arg.OldChatID)
	var i Chat
	err := row.Scan(
		&i.ID,
		&i.ChatID,
		&i.Title,
		&i.Type,
		&i.IsForum,
		&i.IsBotMember,
		&i.Hash,
		&i.LastUpdate,
	)
	return i, err
}

const upsertChatById = `-- name: UpsertChatById :one
INSERT INTO public.chat (chat_id, title, type, is_forum, is_bot_member, hash, last_update)
VALUES ($1, $2, $3, $4, $5, $6, now())
ON CONFLICT (chat_id)
DO UPDATE
SET title = EXCLUDED.title,
    type = EXCLUDED.type,
    is_forum = EXCLUDED.is_forum,
    is_bot_member = EXCLUDED.is_bot_member,
    last_update = now()
RETURNING id, chat_id, title, type, is_forum, is_bot_member, hash, last_update
`

type UpsertChatByIdParams struct {
	ChatID      int64
	Title       string
	Type        string
	IsForum     bool
	IsBotMember *bool
	Hash        *string
}

func (q *Queries) UpsertChatById(ctx context.Context, arg UpsertChatByIdParams) (Chat, error) {
	row := q.db.QueryRow(ctx, upsertChatById,
		arg.ChatID,
		arg.Title,
		arg.Type,
		arg.IsForum,
		arg.IsBotMember,
		arg.Hash,
	)
	var i Chat
	err := row.Scan(
		&i.ID,
		&i.ChatID,
		&i.Title,
		&i.Type,
		&i.IsForum,
		&i.IsBotMember,
		&i.Hash,
		&i.LastUpdate,
	)
	return i, err
}
